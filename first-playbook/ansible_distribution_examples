Specific Distribution Version

You might also need to do different actions based on distribution version, because some things are available on CentOS 6 but not on 5, or on Ubuntu Lucid you need to install some backported packages and not on Ubuntu Precise.

For those situations, you can use either the {{ ansible_distribution_version } or {{ ansible_distribution_release }} variable. See some example output from ansible all -m setup -a "filter=ansible_distribution*":

    "ansible_distribution": "CentOS",
    "ansible_distribution_release": "Final",
    "ansible_distribution_version": "5.9"

    "ansible_distribution": "CentOS",
    "ansible_distribution_release": "Final",
    "ansible_distribution_version": "6.4"

    "ansible_distribution": "Ubuntu",
    "ansible_distribution_release": "lucid",
    "ansible_distribution_version": "10.04"

    "ansible_distribution": "Ubuntu",
    "ansible_distribution_release": "precise",
    "ansible_distribution_version": "12.04"

    "ansible_distribution": "Debian",
    "ansible_distribution_release": "wheezy",
    "ansible_distribution_version": "7"
Using these, you can filter the output by changing the when statement in your ansible playbook:

when: ansible_distribution == 'CentOS' and ansible_distribution_version == '6.4'

when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'precise'

when: ansible_distribution == 'Debian' and ansible_distribution_version == '7'

when: ansible_os_family == "RedHat" and ansible_lsb.major_release|int >= 5
